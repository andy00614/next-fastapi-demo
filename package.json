{
  "name": "fast-api-next",
  "version": "1.0.0",
  "description": "AI-powered fullstack application with FastAPI and Next.js",
  "scripts": {
    "dev": "concurrently \"pnpm run dev:backend\" \"pnpm run dev:frontend\"",
    "dev:backend": "cd backend && ./run.sh",
    "dev:frontend": "cd frontend && pnpm dev",
    "install:all": "cd frontend && pnpm install && cd ../backend && python3.11 -m venv venv && ./venv/bin/pip install -r requirements.txt",
    "build": "cd frontend && pnpm build",
    "start": "concurrently \"pnpm run start:backend\" \"pnpm run start:frontend\"",
    "start:backend": "cd backend && source venv/bin/activate && uvicorn app.main:app --host 0.0.0.0 --port 8000",
    "start:frontend": "cd frontend && pnpm start",
    "db:migrate": "cd backend && source venv/bin/activate && alembic upgrade head",
    "db:makemigrations": "f() { cd backend && source venv/bin/activate && alembic revision --autogenerate -m \"$1\"; }; f",
    "clean": "find . -type d -name \"__pycache__\" -exec rm -rf {} + 2>/dev/null || true && find . -type f -name \"*.pyc\" -delete && rm -rf backend/venv frontend/node_modules frontend/.next",
    "help": "echo 'Available commands:\n  pnpm dev              - Start development servers (frontend + backend)\n  pnpm install          - Install all dependencies\n  pnpm build            - Build frontend for production\n  pnpm start            - Start production servers\n  pnpm db:migrate       - Run database migrations\n  pnpm db:makemigrations \"your message\" - Create new migration\n  pnpm clean            - Clean up generated files\n  pnpm help             - Show this help message'",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": ["fastapi", "nextjs", "ai", "fullstack"],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "concurrently": "^8.2.2"
  }
}
